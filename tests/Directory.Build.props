<?xml version="1.0" encoding="utf-8"?>
<Project>
  
  <!-- https://blog.johnnyreilly.com/2021/07/14/directory-build-props-c-sharp-9-for-all -->  

  <!-- Configuration =================================================================================== -->

  <PropertyGroup>
    <LangVersion>8.0</LangVersion>
    <IsPackable>false</IsPackable>
  </PropertyGroup>  
  
  <!-- Analysers =================================================================================== -->

  <PropertyGroup>
    <NoWarn>1701;1702;1591;CA1062;CA1304;CA1310;CA1000</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Enable all FxCop rules with NetAnalyzers
    https://docs.microsoft.com/es-es/visualstudio/code-quality/migrate-from-fxcop-analyzers-to-net-analyzers?view=vs-2022#migration-steps
    -->
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <!-- <CodeAnalysisRuleSet>$(MsBuildThisFileDirectory)..\solution.ruleset</CodeAnalysisRuleSet>  -->
  </PropertyGroup>

  <ItemGroup>
    
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>   
    
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net6.0' or '$(TargetFramework)' == 'net6.0-windows'">
    
    <!-- Optimization analysis only makes sense on platforms that will be actually ran -->

    <!-- https://devblogs.microsoft.com/premier-developer/avoiding-struct-and-readonly-reference-performance-pitfalls-with-errorprone-net/ -->
    <PackageReference Include="ErrorProne.NET.Structs" >
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    
  </ItemGroup>
  
</Project>