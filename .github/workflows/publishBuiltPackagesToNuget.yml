name: Build preview packages and publish them to nuget

on: workflow_dispatch
    
jobs:
  build:
    runs-on: ubuntu-latest    
    timeout-minutes: 5
    steps:   

      # ---------------------------------------------  DotNet SDK

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4

      # ---------------------------------------------  Android SDK

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'zulu'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

      # ---------------------------------------------  Workloads

    - name: Install Workload
      run: dotnet workload install maui-windows android wasm-tools wasi-experimental  # ois and maui-ios are not supported in ubuntu machines https://github.com/dotnet/maui/issues/15929

      # ---------------------------------------------  checkout repo

    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: dotnet tool restore

    - name: Install dependencies
      run: dotnet restore src/build.sln

    # - name: Create build solution
      # run: dotnet slngen -c Release -o build.sln --launch false src\**\*.csproj
    
    - name: define version suffix      
      run: echo "VERSIONSUFFIX=Preview-$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV    

    - name: define version suffix      
      run: echo "VERSIONSUFFIXSHORT=Prv-$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV  

    - name: Build
      run: dotnet build src/build.sln -c Release --version-suffix ${{env.VERSIONSUFFIX}}

#    - name: Test
#      run: dotnet test -c Release --no-build

    - name: Pack nugets
      run: dotnet pack src/build.sln -c Release --no-build --output .

    - name: Pack sources
      run: dotnet PackAsSourcesNuget src/build.sln --output . --append-sources-suffix true --version-suffix ${{env.VERSIONSUFFIXSHORT}}

#    - name: Push to NuGet
#      run: dotnet nuget push "*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Tensors.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Graphics.Drawing.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Graphics.Bitmaps.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Graphics.Backends.ImageSharp.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Graphics.Backends.GDI.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Graphics.Backends.WPF.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Graphics.Backends.GLTF.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Graphics.Backends.SpanBitmap.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Codecs.STB.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Codecs.MJPEG.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    - name: Push to NuGet
      run: dotnet nuget push "InteropTypes.Crypto.*.nupkg" --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json

    

      
#    - name: unlist
#      run: dotnet nuget delete InteropTypes.Tensors 1.0.0-${{env.VERSIONSUFFIX}} --api-key ${{secrets.InteropTypes_PublishToNuget}} --source https://api.nuget.org/v3/index.json
