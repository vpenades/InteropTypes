using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;

namespace InteropBitmaps
{
    partial class Pixel    
    {
        public interface IPixelFactory<TSrcPixel, TDstPixel>
        {
            TDstPixel From(TSrcPixel color);
        }

<#
        // https://docs.microsoft.com/en-us/visualstudio/modeling/text-template-utility-methods?view=vs-2022

        var pixelFormatAllNames = new string[] {"Alpha8", "Luminance8", "Luminance16", "Luminance32F", "BGR565", "BGR24","RGB24", "BGRA5551", "BGRA4444", "BGRA32", "RGBA32", "ARGB32", "RGBP32","BGRP32", "RGB96F", "BGR96F", "BGRA128F", "RGBA128F", "RGBP128F" };
        var pixelFormatSrcNames = new string[] { "BGRA32", "RGBA128F" };

        foreach(var pixelFmtName in pixelFormatAllNames)
        {
            ClearIndent();
            PushIndent("    ");
            PushIndent("    ");            

            WriteLine($"partial struct {pixelFmtName}");            

            PushIndent("    ");
            for(int i=0; i < pixelFormatSrcNames.Length; ++i)
            {
                var src = pixelFormatSrcNames[i];
                var tmp = (i == 0 ? ": " : ", ") + $"IPixelFactory<{src},{pixelFmtName}>";                
                WriteLine(tmp);                
            }
            PopIndent();

            WriteLine("{");PushIndent("    ");
        
            foreach(var pixelSrcName in pixelFormatSrcNames)            
            {            
                var eval = pixelFmtName == pixelSrcName
                    ? "return color;"
                    : $"return new {pixelFmtName}(color);";

                eval = "{ " + eval + " }";

                WriteLine($"{pixelFmtName} IPixelFactory<{pixelSrcName},{pixelFmtName}>.From({pixelSrcName} color) {eval}");                
            }

            PopIndent(); WriteLine("}");
        }

        ClearIndent();
#>
    }
}
